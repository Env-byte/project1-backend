name: Integrate

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.301'
              
      - name: Run Install
        run: dotnet restore
        
      - name: Run Build
        run: dotnet build --configuration Release --no-restore

      - name: Run Publish
        run: dotnet publish --configuration Release --no-restore --no-build

      - uses: actions/upload-artifact@v2
        with:
          name: release
          path: ./api/Detail/bin/Release/net6.0/publish/*
          retention-days: 1

      - uses: actions/upload-artifact@v2
        with:
          name: release-configs
          path: |
            ./.github/workflows/deploy.ps1
            ./.github/workflows/configs/*
          retention-days: 1
          
      - name: Run Tests
        run: dotnet test --configuration Release --no-restore
        env:
          DETAIL_ENVIRONMENT: 2
          DETAIL_CONFIGURATION_CONNECTION_STRING: Server=localhost;Port=5432;Database=postgres;Username=postgres;Password=postgres;CommandTimeout=90;Connection Idle Lifetime=60;keepalive=10;

  deploy-api-production:
    runs-on: ubuntu-latest
    needs: [ build ]

    concurrency:
      group: deploy
      cancel-in-progress: true

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: release
          path: ./release

      - uses: actions/download-artifact@v2
        with:
          name: release-configs
          path: ./release-configs

      - name: Run Deploy
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          pwsh ./release-configs/deploy.ps1 -HostAddress ${{ secrets.SSH_HOST }} -HostPort ${{ secrets.SSH_PORT }} -HostUser ${{ secrets.SSH_USER }}
